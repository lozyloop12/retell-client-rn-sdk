!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("eventemitter3"),require("livekit-client")):"function"==typeof define&&define.amd?define(["exports","eventemitter3","livekit-client"],t):t((e||self).retellClientRnSdk={},e.eventemitter3,e.livekitClient)}(this,function(e,t,n){function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function o(e,t){try{var n=e()}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}var r=!1,a=function(e){return"undefined"!=typeof window&&window.requestAnimationFrame?window.requestAnimationFrame(e):setTimeout(e,16)},s=new TextDecoder,c=/*#__PURE__*/function(e){function t(){var t;return(t=e.call(this)||this).room=void 0,t.connected=!1,t.isAgentTalking=!1,t.analyzerComponent=void 0,t.captureAudioFrame=void 0,t}var c,l;l=e,(c=t).prototype=Object.create(l.prototype),c.prototype.constructor=c,i(c,l),t.registerGlobals=function(){try{return Promise.resolve(o(function(){var e=require("@livekit/react-native");return Promise.resolve((0,e.registerGlobals)()).then(function(){r=!0,console.log("LiveKit globals registered manually")})},function(e){throw new Error("Failed to register LiveKit globals. Ensure @livekit/react-native and @livekit/react-native-webrtc are installed. Error: "+e.message)}))}catch(e){return Promise.reject(e)}};var u=t.prototype;return u.ensureLiveKitGlobals=function(){try{return Promise.resolve(o(function(){var e=function(){if(!r){var e=require("@livekit/react-native");return Promise.resolve((0,e.registerGlobals)()).then(function(){r=!0,console.log("LiveKit globals registered successfully")})}}();if(e&&e.then)return e.then(function(){})},function(e){throw console.error("Failed to register LiveKit globals:",e),new Error("WebRTC isn't detected. Please ensure @livekit/react-native-webrtc is properly installed and linked. For React Native 0.60+, run 'cd ios && pod install' for iOS. Original error: "+e.message)}))}catch(e){return Promise.reject(e)}},u.startCall=function(e){try{var t=this,i=o(function(){return Promise.resolve(t.ensureLiveKitGlobals()).then(function(){return t.room=new n.Room({audioCaptureDefaults:{autoGainControl:!0,echoCancellation:!0,noiseSuppression:!0,channelCount:1,deviceId:e.captureDeviceId,sampleRate:e.sampleRate},audioOutput:{deviceId:e.playbackDeviceId}}),t.handleRoomEvents(),t.handleAudioEvents(e),t.handleDataEvents(),Promise.resolve(t.room.connect("wss://retell-ai-4ihahnq7.livekit.cloud",e.accessToken)).then(function(){console.log("connected to room",t.room.name),t.room.localParticipant.setMicrophoneEnabled(!0),t.connected=!0,t.emit("call_started")})})},function(e){var n="Error starting call";e.message&&e.message.includes("WebRTC")?n="WebRTC initialization failed - ensure React Native WebRTC is properly set up":e.message&&e.message.includes("registerGlobals")&&(n="LiveKit globals registration failed - check React Native setup"),t.emit("error",n),console.error("Error starting call",e),t.stopCall()});return Promise.resolve(i&&i.then?i.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},u.startAudioPlayback=function(){try{return Promise.resolve(this.room.startAudio()).then(function(){})}catch(e){return Promise.reject(e)}},u.stopCall=function(){var e,t;this.connected&&(this.connected=!1,this.emit("call_ended"),null==(e=this.room)||e.disconnect(),this.isAgentTalking=!1,delete this.room,this.analyzerComponent&&(this.analyzerComponent.cleanup(),delete this.analyzerComponent),this.captureAudioFrame&&(t=this.captureAudioFrame,"undefined"!=typeof window&&window.cancelAnimationFrame?window.cancelAnimationFrame(t):clearTimeout(t),delete this.captureAudioFrame))},u.mute=function(){this.connected&&this.room.localParticipant.setMicrophoneEnabled(!1)},u.unmute=function(){this.connected&&this.room.localParticipant.setMicrophoneEnabled(!0)},u.captureAudioSamples=function(){var e=this;if(this.connected&&this.analyzerComponent){var t=new Float32Array(this.analyzerComponent.analyser.fftSize);this.analyzerComponent.analyser.getFloatTimeDomainData(t),this.emit("audio",t),this.captureAudioFrame=a(function(){return e.captureAudioSamples()})}},u.handleRoomEvents=function(){var e=this;this.room.on(n.RoomEvent.ParticipantDisconnected,function(t){"server"===(null==t?void 0:t.identity)&&setTimeout(function(){e.stopCall()},500)}),this.room.on(n.RoomEvent.Disconnected,function(){e.stopCall()})},u.handleAudioEvents=function(e){var t=this;this.room.on(n.RoomEvent.TrackSubscribed,function(i,o,r){if(i.kind===n.Track.Kind.Audio&&i instanceof n.RemoteAudioTrack){if("agent_audio"===o.trackName&&(t.emit("call_ready"),e.emitRawAudioSamples))try{t.analyzerComponent=n.createAudioAnalyser(i),t.captureAudioFrame=a(function(){return t.captureAudioSamples()})}catch(e){console.warn("Audio analysis not supported in React Native:",e)}i.attach()}})},u.handleDataEvents=function(){var e=this;this.room.on(n.RoomEvent.DataReceived,function(t,n,i,o){try{if("server"!==(null==n?void 0:n.identity))return;var r=s.decode(t),a=JSON.parse(r);"update"===a.event_type?e.emit("update",a):"metadata"===a.event_type?e.emit("metadata",a):"agent_start_talking"===a.event_type?(e.isAgentTalking=!0,e.emit("agent_start_talking")):"agent_stop_talking"===a.event_type?(e.isAgentTalking=!1,e.emit("agent_stop_talking")):"node_transition"===a.event_type&&e.emit("node_transition",a)}catch(e){console.error("Error decoding data received",e)}})},t}(t.EventEmitter);e.RetellWebClient=c,e.default=c});
