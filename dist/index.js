var e=require("eventemitter3"),t=require("livekit-client");function n(e,t){return n=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},n(e,t)}function r(e,t){try{var n=e()}catch(e){return t(e)}return n&&n.then?n.then(void 0,t):n}var o=!1,i=function(e){return"undefined"!=typeof window&&window.requestAnimationFrame?window.requestAnimationFrame(e):setTimeout(e,16)},a="undefined"!=typeof TextDecoder?new TextDecoder:{decode:function(e){try{if("undefined"!=typeof Buffer)return Buffer.from(e).toString("utf8");for(var t="",n=0;n<e.length;){var r=e[n++];if(r<128)t+=String.fromCharCode(r);else if(192==(224&r)){var o=e[n++];t+=String.fromCharCode((31&r)<<6|63&o)}else if(224==(240&r)){var i=e[n++],a=e[n++];t+=String.fromCharCode((15&r)<<12|(63&i)<<6|63&a)}else t+=String.fromCharCode(65533)}return t}catch(t){return console.warn("Error decoding text:",t),String.fromCharCode.apply(null,Array.from(e))}}};exports.RetellWebClient=/*#__PURE__*/function(e){function s(){var t;return(t=e.call(this)||this).room=void 0,t.connected=!1,t.isAgentTalking=!1,t.analyzerComponent=void 0,t.captureAudioFrame=void 0,t}var c,l;l=e,(c=s).prototype=Object.create(l.prototype),c.prototype.constructor=c,n(c,l),s.registerGlobals=function(){try{return Promise.resolve(r(function(){var e=require("@livekit/react-native");return Promise.resolve((0,e.registerGlobals)()).then(function(){o=!0,console.log("LiveKit globals registered manually")})},function(e){throw new Error("Failed to register LiveKit globals. Ensure @livekit/react-native and @livekit/react-native-webrtc are installed. Error: "+e.message)}))}catch(e){return Promise.reject(e)}};var u=s.prototype;return u.ensureLiveKitGlobals=function(){try{return Promise.resolve(r(function(){var e=function(){if(!o){var e=require("@livekit/react-native");return Promise.resolve((0,e.registerGlobals)()).then(function(){o=!0,console.log("LiveKit globals registered successfully")})}}();if(e&&e.then)return e.then(function(){})},function(e){throw console.error("Failed to register LiveKit globals:",e),new Error("WebRTC isn't detected. Please ensure @livekit/react-native-webrtc is properly installed and linked. For React Native 0.60+, run 'cd ios && pod install' for iOS. Original error: "+e.message)}))}catch(e){return Promise.reject(e)}},u.startCall=function(e){try{var n=this,o=r(function(){return Promise.resolve(n.ensureLiveKitGlobals()).then(function(){return n.room=new t.Room({audioCaptureDefaults:{autoGainControl:!0,echoCancellation:!0,noiseSuppression:!0,channelCount:1,deviceId:e.captureDeviceId,sampleRate:e.sampleRate},audioOutput:{deviceId:e.playbackDeviceId}}),n.handleRoomEvents(),n.handleAudioEvents(e),n.handleDataEvents(),Promise.resolve(n.room.connect("wss://retell-ai-4ihahnq7.livekit.cloud",e.accessToken)).then(function(){console.log("connected to room",n.room.name),n.room.localParticipant.setMicrophoneEnabled(!0),n.connected=!0,n.emit("call_started")})})},function(e){var t="Error starting call";e.message&&e.message.includes("WebRTC")?t="WebRTC initialization failed - ensure React Native WebRTC is properly set up":e.message&&e.message.includes("registerGlobals")&&(t="LiveKit globals registration failed - check React Native setup"),n.emit("error",t),console.error("Error starting call",e),n.stopCall()});return Promise.resolve(o&&o.then?o.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},u.startAudioPlayback=function(){try{return Promise.resolve(this.room.startAudio()).then(function(){})}catch(e){return Promise.reject(e)}},u.stopCall=function(){var e,t;this.connected&&(this.connected=!1,this.emit("call_ended"),null==(e=this.room)||e.disconnect(),this.isAgentTalking=!1,delete this.room,this.analyzerComponent&&(this.analyzerComponent.cleanup(),delete this.analyzerComponent),this.captureAudioFrame&&(t=this.captureAudioFrame,"undefined"!=typeof window&&window.cancelAnimationFrame?window.cancelAnimationFrame(t):clearTimeout(t),delete this.captureAudioFrame))},u.mute=function(){this.connected&&this.room.localParticipant.setMicrophoneEnabled(!1)},u.unmute=function(){this.connected&&this.room.localParticipant.setMicrophoneEnabled(!0)},u.captureAudioSamples=function(){var e=this;if(this.connected&&this.analyzerComponent){var t=new Float32Array(this.analyzerComponent.analyser.fftSize);this.analyzerComponent.analyser.getFloatTimeDomainData(t),this.emit("audio",t),this.captureAudioFrame=i(function(){return e.captureAudioSamples()})}},u.handleRoomEvents=function(){var e=this;this.room.on(t.RoomEvent.ParticipantDisconnected,function(t){"server"===(null==t?void 0:t.identity)&&setTimeout(function(){e.stopCall()},500)}),this.room.on(t.RoomEvent.Disconnected,function(){e.stopCall()})},u.handleAudioEvents=function(e){var n=this;this.room.on(t.RoomEvent.TrackSubscribed,function(r,o,a){if(r.kind===t.Track.Kind.Audio&&r instanceof t.RemoteAudioTrack){if("agent_audio"===o.trackName&&(n.emit("call_ready"),e.emitRawAudioSamples))try{n.analyzerComponent=t.createAudioAnalyser(r),n.captureAudioFrame=i(function(){return n.captureAudioSamples()})}catch(e){console.warn("Audio analysis not supported in React Native:",e)}r.attach()}})},u.handleDataEvents=function(){var e=this;this.room.on(t.RoomEvent.DataReceived,function(t,n,r,o){try{if("server"!==(null==n?void 0:n.identity))return;var i=a.decode(t),s=JSON.parse(i);"update"===s.event_type?e.emit("update",s):"metadata"===s.event_type?e.emit("metadata",s):"agent_start_talking"===s.event_type?(e.isAgentTalking=!0,e.emit("agent_start_talking")):"agent_stop_talking"===s.event_type?(e.isAgentTalking=!1,e.emit("agent_stop_talking")):"node_transition"===s.event_type&&e.emit("node_transition",s)}catch(e){console.error("Error decoding data received",e)}})},s}(e.EventEmitter);
